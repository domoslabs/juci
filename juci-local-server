#!/usr/bin/nodejs

var express = require('express');
var app = express();
var fs = require("fs");
var JSON = require("JSON");
var http = require("http");
var bodyParser = require('body-parser')
var config = { port: 3000, host: "192.168.1.1" };

var conf;
try {
	var confstring = fs.readFileSync(".localserver.conf", "utf8");
	conf = JSON.parse(confstring)
}catch(e){
	console.log("no config file found with valid JSON found");
}
if(conf)
	config = conf;

if(!config.port || !config.host){
	console.log("invalid conf file (.localserver.conf)");
	help();
}

for(var i = 0; i < process.argv.length; i++){
	switch(process.argv[i]){
		case "--port": config.port = parseInt(process.argv[++i]); break;
		case "--help":
		case "-h":
			help();
		case "--host": config.host = process.argv[++i]; break;
	};
}

function help(){
	console.log("Usage:");
	console.log("	--port <port>");
	console.log("		specify port to use for local server");
	console.log("	--host <host>");
	console.log("		specify host to use for local server");
	console.log("config file is .localserver.conf flags will override");
	process.exit();
}

app.use( bodyParser.json() );       // to support JSON-encoded bodies
app.use(bodyParser.urlencoded({     // to support URL-encoded bodies
  extended: true
}));

app.use(express.static(__dirname + '/bin/www'));

var spawn = require('child_process').spawn;

spawn('make', ["debug", "DEFAULT_THEME=y"], { stdio: [0,null,2] })
.on("exit", (code) => console.log("Recompiled gui, exit code: "+code));


var server = app.listen(config.port, () =>
	console.log("Local server listening on http://localhost:", config.port,
			" using remote hsot:", config.host));

app.get('/host_ip', (req, res) => res.send("ws://" + config.host));

