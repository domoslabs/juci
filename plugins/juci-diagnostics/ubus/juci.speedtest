#!/bin/sh 

. /usr/share/libubox/jshn.sh 
. /lib/functions.sh

ifaces="ethernet vdsl adsl"

get_packet_sizes () {
	local option="$1"
	local packetsizes

#	config_load speedtest
#	config_get packetsizes packetsize $option
	packetsizes=$(uci -q get speedtest.@packetsize[0].$option)

	if [ "$packetsizes" ]; then
		packetsize_down=${packetsizes%/*}
		packetsize_up=${packetsizes#*/}
	else
		case "$option" in
			ethernet)
				packetsize_up=5
				packetsize_down=100
				;;
			vdsl)
				packetsize_up=3
				packetsize_down=50
				;;
			adsl)
				packetsize_up=1
				packetsize_down=25
				;;
			*)
				packetsize_up=1
				packetsize_down=25
		esac
	fi
}

get_iface () {
	iface=$(ip route | awk '/default via/{print $5}')
	case "$iface" in
		eth*)
			iface="ethernet"
		;;
		atm*)
			iface="adsl"
		;;
		ptm*)
			iface="vdsl"
		;;
		wwan*)
			iface="vdsl"
		;;
		br-*)
			iface="ethernet"
		;;
		*)
			iface="ethernet"
	esac
}

case "$1" in
	list)
		echo '{ "run" : {"testmode":"str","packetsize_up":32,"packetsize_down":32,"address":"str","port":32}, "get_packet_size" : {}, "is_running": {} }'
	;;
	call)
		case "$2" in
			run)
				if pidof tptest-run >/dev/null; then
					json_init
					json_add_string "state" "error"
					json_add_string "message" "there is already a speedtest going on"
					json_dump
				else
					read input
					tptest-run "$input" >/dev/null 2>&1 &
					json_init
					json_add_string "state" "running"
					json_add_string "message" "success"
					json_dump
				fi
			;;
			is_running)
				json_init
				if pidof tptest-run >/dev/null; then
					json_add_string "message" "running"
					json_add_boolean "running" 1
				else
					json_add_string "message" "not running"
					json_add_boolean "running" 0
				fi
				json_dump
			;;
			get_packet_size)
				get_iface

				for i in $ifaces; do
					if [ $iface == "$i" ]; then
						get_packet_sizes $iface
						json_init
						json_add_string "packetsize_up" "$packetsize_up"
						json_add_string "packetsize_down" "$packetsize_down"
						json_dump
						return
					fi
				done
			;;
		esac
	;;
esac
