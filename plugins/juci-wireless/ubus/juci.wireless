#!/bin/sh

. /usr/share/libubox/jshn.sh

wlctl_scan_results() {
	local radio=$1
	local started=0
	local scanfile=/tmp/"$radio"_scan_results

	wlctl -i $radio scanresults | grep "SSID\|BSSID\|Mode\|AKM" | tr '\t' ' ' > $scanfile

	json_init
	json_add_array "access_points"
	while read -r line
	do
		case "$line" in
			SSID:*)
				[ $started -eq 1 ] && json_select .. || started=1
				json_add_object ""
				json_add_string ssid "$(echo $line | awk '{print$2}' | tr -d '\"')"
			;;
			Mode:*)
				json_add_int rssi "$(echo $line | awk '{print$4}')"
				json_add_int noise "$(echo $line | awk '{print$10}')"
				channel=$(echo $line | awk '{print$NF}')
				json_add_int channel $channel
				json_add_string frequency "$([ $channel -ge 36 ] && echo 5GHz || echo 2.4GHz)"
			;;
			BSSID:*)
				json_add_string bssid "$(echo $line | awk '{print$2}')"
			;;
			AKM*)
				json_add_string cipher "$(echo $line | awk '{print$3}')"
			;;
		esac
	done < $scanfile
	rm -f $scanfile
	json_dump
}

iwpriv_scan_results() {
	local radio=$1
	local started=0
	local scanfile=/tmp/"$radio"_scan_results

	iwpriv $radio get_site_survey | tail -n +3 | head -n -1 | tr -s ' ' > $scanfile
	#iwpriv $radio set SiteSurvey=0

	json_init
	json_add_array "access_points"
	while read -r line
	do
		json_add_object ""
		json_add_string ssid "$(echo $line | cut -d ' ' -f2)"
		signal=$(echo $line | cut -d ' ' -f5)
		rssi=$((100-signal))
		json_add_int rssi $rssi
		json_add_int noise -90
		channel=$(echo $line | cut -d ' ' -f1)
		json_add_int channel $channel
		json_add_string frequency "$([ $channel -ge 36 ] && echo 5GHz || echo 2.4GHz)"
		json_add_string bssid "$(echo $line | cut -d ' ' -f3)"
		json_add_string cipher "$(echo $line | cut -d ' ' -f4)"
		json_select ..
	done < $scanfile
	rm -f $scanfile
	json_dump
}

case "$1" in
	list)
		echo '{ "scan" : {"radio":"str"}, "scanresults" : {"radio":"str"}, "set_credentials" : {"ssid":"str", "encryption":"str", "key":"str"}, "bsd_status" : {}, "bsd_log" : {} }'

	;;
	call)
		case "$2" in
			scan)
				read input;

				json_load "$input"
				json_get_var radio radio

				[ -n "$radio" ] || return 1

				json_init
				if [ -f /usr/sbin/wlctl ]; then
					wlctl -i $radio scanabort 2>&1
					json_add_boolean success $(wlctl -i $radio scan 2>&1 | grep -q Rejected && echo 0 || echo 1)
				elif [ -f /usr/sbin/iwpriv ]; then
					json_add_boolean success $(iwpriv $radio set SiteSurvey=1 && echo 1)
				else
					json_add_boolean success 0
				fi
				json_dump
			;;
			scanresults)
				read input;

				json_load "$input"
				json_get_var radio radio

				[ -n "$radio" ] || return 1

				if [ -f /usr/sbin/wlctl ]; then
					wlctl_scan_results $radio
				elif [ -f /usr/sbin/iwpriv ]; then
					iwpriv_scan_results $radio
				fi
			;;
			set_credentials)
				read input;

				json_load "$input"
				json_get_var ssid ssid
				json_get_var key key
				json_get_var encryption encryption

				json_init

				if [ -z "$ssid" -o -z "$encryption" ]; then
					json_add_string "encryption" "$encryption"
					json_add_string "ssid" "$ssid"
					json_add_string "error" "ssid and encryption needed"
					json_dump
				elif [ "$encryption" != "none" -a -z "$key" ]; then
					json_add_string "error" "key needed if encryption is not 'none'"
					json_dump
				else
					wifi import "$input" >/dev/null 2>&1 &
					json_add_string "code" "success"
				fi

				json_dump
			;;
		bsd_status)
			json_init
			json_add_string bsd_status "$(bsd -s)"
			json_dump
		;;
		bsd_log)
			json_init
			json_add_string bsd_log "$(bsd -l)"
			json_dump
		;;
		esac
	;;
esac
